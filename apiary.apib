FORMAT: 1A
HOST: http://onebox-api-url/1.0/ticketing-api

# onebox-ticketing-api

## Ticketing API
+ Search for events, sessions, venue price zones and its availability
+ Provide a complete shopping cart management capabilities
+ Book tickets in two simple steps:
  + Reserve tickets by locking its availability for a while
  + Confirm reserved tickets
+ Release Locked tickets
+ Cancel an already booked and confirmed tickets.

To do so, we have used a **API Blueprint** standard, **apiary** as an online editing and mocking tool, **aglio** to document it and **getsandbox** as a sandbox provider:
+ [API Blueprint](https://apiblueprint.org/)
+ [apiary.io](http://docs.oneboxticketingapi.apiary.io/)
+ [getsandbox.com](http://onebox-ticketing-api.getsandbox.com/)
+ [aglio](https://github.com/danielgtaylor/aglio)
+ [github](https://github.com/joliva-ob/onebox-ticketing-api)
+ [onebox-developer](http://developer.oneboxtickets.com/ticketing-api/)

## OAuth2 Requests [/oauth/token]

### Oauth2 Request Access Token [POST]

You will need to use OAuth to access the API.  Write to us at api-support@oneboxtm.com.  We will give you a client ID and client secret. Use this as shown in the following call in order to retrieve a token.
Once you have a token you can use it in all API calls as shown below.

+ Request  (application/json)

        {
          "grant_type": "password",
          "client_id": [CLIENT_ID],
          "client_secret": [CLIENT_SECRET],
          "password": [YOURPASSWORD],
          "username": [YOURUSERNAME]
        }

+ Response 201 (application/json)

        {
          "access_token": "[OAUTH2_TOKEN]",
          "token_type":"bearer",
          "expires_in":7200,
          "refresh_token": "[REFRESH_TOKEN]"
        }

+ Response 400 (application/json)

        {
          "error": "Bad request",
          "error_description": "There was a syntax error, check your params request and try it again."
        }

+ Response 401 (application/json)

        {
          "error": "unauthorized",
          "error_description": "Full authentication is required to access this resource"
        }

## Events [/ticketing-api/1.0/events?id&start_date&end_date&min_price&max_price&city_id6latitude&longitude&radius&is_seats_available&page&page_size]
List all the key data from the events.

See below the description of the response fields we consider that need to be explained:

| Response Field                   | Description                             |
|----------------------------------|-----------------------------------------|
| version                          | (Text) Version of the API               |
| href                             | (Text) Url of the API doc               |
| trace_id                         | (Text) unique identifier of the request |
| parameters                       | (Object) Request filtering used         |

### List all events [GET]

Collection of events and its session dates.

+ Request

  + Headers

            Authorization: Bearer [OAUTH2_TOKEN]
            Accept: application/json

+ Parameters
    + id (optional, string) ... Filter by given event id
    + start_date (optional, date) ... Filter by starting date ('2015-08-05T08:40:51.620Z')
    + end_date (optional, date) ... Filter by final date
    + min_price (optional, number) ... Filter from a minimum price and above.
    + max_price (optional, number) ... Filter by a maximum price and below.
    + city_id (optional, string) ... Filter by a given city id.
    + latitude (optional, number) ... It needs a longitude and radius params to search arround a GPS location.
    + longitude (optional, number) ... It needs a latitude and radius params to search arround a GPS location.
    + radius (optional, number) ... Filter by a radius applied arround a GPS location.     
    + is_seats_available (optional, enum[boolean])
      Filter whether is any seat available to book or not:
        + Members
          + `true` - Filter by events with seats still available.
          + `false` - Filter by events with no seat is still available.
    + page (optional, number) ... Paginate response to point at the given page number.
    + page_size (optional, number) ... Indicate the maximum number of elements per page.

+ Response 200 (application/json)

        {
            "version": "1.0",
            "href": "http://www.oneboxtm.com/ticketing-api/1.0/events/",
            "trace_id": "94abc26e-173a-4ab2-a71b-863aed20f656",
            "request_date": "2015-08-05T08:40:51.620Z",
            "parameters":
            {
              "page": 2,
              "page_size": 20
            },
            "events": [
              {
                "id": "JFSKF34K2K4",
                "event_name": "Campeonato liga LFP 15-16",
                "start_date": "2015-08-05T08:40:51.620Z",
                "end_date": "2015-08-05T08:40:51.620Z",
                "location":{
                  "country": "España",
                  "city_id": "4087",
                  "city_name": "Barcelona",
                  "zip_code": "fdjkw34-4",
                  "longitude": 34209.30,
                  "latitude": 342342.33
                },
                "venue_id": "2",
                "venue_name": "Camp Nou",
                "event_dates": [
                  {
                      "id": "12",
                      "date": "2015-08-05T08:40:51.620Z",
                      "price_id": "21",
                      "price_level_id": "454",
                      "min_price": 23.3,
                      "max_price": 50.33,
                      "seats_available": 34,
                      "links":[
                        {
                          "name": "eventdates",
                          "prompt": "Event dates",
                          "rel": "eventdates",
                          "href": "event_dates?id=12",
                          "render": "link"
                        }
                      ]
                  },
                  {
                      "id": "13",
                      "date": "2015-08-05T08:40:51.620Z",
                      "price_id": "21",
                      "price_level_id": "454",
                      "min_price": 23.3,
                      "max_price": 50.33,
                      "seats_available": 23,
                      "links":[
                        {
                          "name": "eventdates",
                          "prompt": "Event dates",
                          "rel": "eventdates",
                          "href": "event_dates?id=12",
                          "render": "link"
                        }
                      ]
                  }
                ],
              }
            ],
            "links": [
              {
                "name": "next_page",
                "prompt": "Next",
                "rel": "next",
                "href": "events?page=3&page_size=20",
                "render": "link"
              },
              {
                "name": "previous_page",
                "prompt": "Back",
                "rel": "back",
                "href": "events?page=1&page_size=20",
                "render": "link"
              }
            ]
        }

+ Response 204 (application/json)

+ Response 400 (application/json)

        {
          "error": "Bad request",
          "error_description": "There was a syntax error, check your params request and try it again."
        }

+ Response 401 (application/json)

        {
          "error": "unauthorized",
          "error_description": "Full authentication is required to access this resource"
        }

## Event dates [/ticketing-api/1.0/event_dates?id&event_id&city_id6latitude&longitude&radius&start_date&end_date&page&page_size]
List all the key data for each evet date (sesión in spanish) like zones, price zone levels, available promotions and availability by zone, from a given event.

See below the description of the response fields we consider that need to be explained:

| Response Field                   | Description                             |
|----------------------------------|-----------------------------------------|
| version                          | (Text) Version of the API               |
| href                             | (Text) Url of the API doc               |
| trace_id                         | (Text) unique identifier of the request |
| parameters                       | (Object) Request filtering used         |

### List all event dates [GET]

+ Request

  + Headers

            Authorization: Bearer [OAUTH2_TOKEN]
            Accept: application/json

+ Parameters

    + event_id (required, string) ... Parent event to get insights.
    + start_date (optional, date) ... Filter by starting date (`2015-08-05T08:40:51.620Z`)
    + end_date (optional, date) ... Filter by final date
    + page (optional, number) ... Paginate response to the given page number
    + page_size (optional, number) ... Indicate the maximum number of elements per page.
    + city_id (optional, string) ... Filter by a given city id.
    + latitude (optional, number) ... It needs a longitude and radius params to search arround a GPS location.
    + longitude (optional, number) ... It needs a latitude and radius params to search arround a GPS location.
    + radius (optional, number) ... Filter by a radius applied arround a GPS location.

+ Response 200 (application/json)

        {
            "version": "1.0",
            "href": "http://www.oneboxtm.com/ticketing-api/1.0/event_dates",
            "trace_id": "94abc26e-173a-4ab2-a71b-863aed20f656",
            "request_date": "2015-08-05T08:40:51.620Z",
            "parameters":
            {
              "event_id": "4345",
              "id": "2"
            },
            "event_dates": [
              {
                "id": "44",
                "price_levels":[
                  {
                    "id": "454",
                    "price": 23.3,
                    "price_level_id": "432423",
                    "available_promotions":[],
                    "links":[
                      {
                        "name": "price_levels",
                        "prompt": "Price Levels",
                        "rel": "pricelevels",
                        "href": "price_levels?id=432423",
                        "render": "link"
                      }
                    ]
                  },
                  {
                    "id": "455",
                    "price": 33.3,
                    "price_level_id": "432424",
                    "available_promotions":[],
                    "links":[
                      {
                        "name": "price_levels",
                        "prompt": "Price Levels",
                        "rel": "pricelevels",
                        "href": "price_levels?id=432424",
                        "render": "link"
                      }
                    ]
                  }
                ]
              }
            ],
            "links": []
        }

+ Response 204 (application/json)

+ Response 400 (application/json)

        {
          "error": "Bad request",
          "error_description": "There was a syntax error, check your params request and try it again."
        }

+ Response 401 (application/json)

        {
          "error": "unauthorized",
          "error_description": "Full authentication is required to access this resource"
        }

## Price levels [/ticketing-api/1.0/price_levels?id&event_id&event_date_id]
Retrieve a detailed zone map with the availability of each seat from that zone, venue, event and date.

### List all price levels [GET]

+ Parameters

    + event_id (required, string) ... Filter by the given event id.
    + event_date_id (required, string) ... Filter by the given event date id.
    + id (required, string) ... Update a given price id

+ Request

      + Headers

            Authorization: Bearer [OAUTH2_TOKEN]
            Accept: application/json

+ Response 200 (application/json)

        {
            "version": "1.0",
            "href": "http://www.oneboxtm.com/ticketing-api/1.0/price_levels",
            "trace_id": "94abc26e-173a-4ab2-a71b-863aed20f656",
            "request_date": "2015-08-05T08:40:51.620Z",
            "parameters":
            {
              "event_id": "4345",
              "event_date_id": "2"
            },
            "price_levels":[
              {
                "id": "454",
                "name": "Tribuna alta",
                "price": 23.3,
                "seats_available": 23,
                "links":[
                  {
                    "name": "seats",
                    "prompt": "Seats availability",
                    "rel": "seats",
                    "href": "/price_levels/454/seats",
                    "render": "link"
                  }
                ]
              },
              {
                "id": "455",
                "name": "Tribuna baja",
                "price": 15.40,
                "seats_available": 2,
                "links":[
                  {
                    "name": "seats",
                    "prompt": "Seats availability",
                    "rel": "seats",
                    "href": "/price_levels/455/seats",
                    "render": "link"
                  }
                ]
              }
            ],
            "links": []
        }

+ Response 400 (application/json)

        {
          "error": "Bad request",
          "error_description": "There was a syntax error, check your params request and try it again."
        }

+ Response 401 (application/json)

        {
          "error": "unauthorized",
          "error_description": "Full authentication is required to access this resource"
        }

## Seating availability [/ticketing-api/1.0/seats?event_id&event_date_id&price_level_id]
Retrieve a detailed seating availability for the given price level zone.

### List all seating availability [GET]

+ Parameters

  + event_id (required, string) ... Filter by the given event id.
  + event_date_id (required, string) ... Filter by the given event date id.
  + price_level_id (required, string) ... Filter by the given price level id.

+ Request

      + Headers

            Authorization: Bearer [OAUTH2_TOKEN]
            Accept: application/json

+ Response 200 (application/json)

        {
            "version": "1.0",
            "href": "http://www.oneboxtm.com/ticketing-api/1.0/seats?event_id=4345&event_date_id=2&price_level_id=434",
            "trace_id": "94abc26e-173a-4ab2-a71b-863aed20f656",
            "request_date": "2015-08-05T08:40:51.620Z",
            "parameters":
            {
              "event_id": "4345",
              "event_date_id": "2",
              "price_level_id": "434"
            },
            "seats":[
              {
                "id": "454",
                "is_available": true
              },
              {
                "id": "455",
                "is_available": false
              }
            ],
            "links": []
        }

+ Response 400 (application/json)

        {
          "error": "Bad request",
          "error_description": "There was a syntax error, check your params request and try it again."
        }

+ Response 401 (application/json)

        {
          "error": "unauthorized",
          "error_description": "Full authentication is required to access this resource"
        }

## Static data domains [/ticketing-api/1.0/domains?id&type&language&page&page_size]
Retrieve the static data needed for mapping and quering purposes. You will be able to filter data by type and language.

### List all domains [GET]

+ Parameters

  + id (optional, string) ... Filter by the given event id.
  + type (optional, string) ... Filter by the given domain type.
  + language (optional, string) ... Filter by the given language.
  + page (optional, number) ... Paginate response to the given page number
  + page_size (optional, number) ... Indicate the maximum number of elements per page.

+ Request

      + Headers

            Authorization: Bearer [OAUTH2_TOKEN]
            Accept: application/vnd.collection+json

+ Response 200 (application/vnd.collection+json)

        {
          "collection":{
          {
              "version": "1.0",
              "href": "http://www.oneboxtm.com/ticketing-api/1.0/seats",
              "trace_id": "94abc26e-173a-4ab2-a71b-863aed20f656",
              "request_date": "2015-08-05T08:40:51.620Z",
              "parameters":
              {
                "type": "error_code",
                "language": "SPA"
              },
              "items":[
                {
                  "id": "1001",
                  "type": "error_code",
                  "name": "Error por falta de parámetro obligatorio"
                },
                {
                  "id": "1003",
                  "type": "error_code",
                  "name": "Error en el formato de parámetro de tipo fecha"
                }
              ],
              "links": []
          }
        }

+ Response 400 (application/vnd.collection+json)

        {
          "error": "Bad request",
          "error_description": "There was a syntax error, check your params request and try it again."
        }

+ Response 401 (application/vnd.collection+json)

        {
          "error": "unauthorized",
          "error_description": "Full authentication is required to access this resource"
        }

## Orders operations [/orders/{id}]

### Create a new order [POST]

This will create a new order resource, the user are entitled to set the number of wished seats by 
a given price_zone, to set detailed allocation if venue 
configuration allow you, to set the buyer personal details and delivery method. 
And overall, a client will be able to perform it directly (direct confirm) or in two steps 
(first lock the seats -default- getting a temporal token, then confirm the seats if already 
paid receving the final locator). Possible statues available are:

 + `INITIATE` - Null value to set up an empty order.
 + `PREORDER` - Lock tickets for a while.
 + `PAID` - Mark tickets as paid and confirmed.
    
    
If the allocation (seat_id) is not known, the system will automatically allocate the number of seats from "seats_number" field. 
System will always try to allocate the best seats available. 
If the desired seating is not numbered, then only the price_level_id is needed.

+ Request  (application/json)

        {
            "order_id": "4322",
            "preorder_id": "fksjfkajhkfj4kj53k45j3knrkfndkfn",
            "order_total_price": 25.50,
            "order_items": [
                {
                    "supplier_id": "avet-fcb",
                    "external_order_id": "34C88A4/1112016/145847",
                    "delivery_method": {
                        "type": "PASSBOOK"
                    },
                    "order_items_total_price": 25.50,
                    "events":[
                        {
                          "event_id": "4345",
                          "event_date_id": "2",
                          "remaining_release_seats_time": 125,
                          "event_total_price": 25.50,
                          "tickets":[
                            {
                                "ticket_id": "342",
                                "seat_id": "454",
                                "is_numbered": true,
                                "price_level_id": "4345",
                                "row": 20,
                                "row_name": "20",
                                "seat": 3,
                                "seat_name": "3A",
                                "entrance": "",
                                "gate": "1",
                                "block": "1",
                                "sector": "",
                                "barcode": "",
                                "price": 25.50,
                                "status": "RESERVED",
                                "buyer": {
                                    "personal_id": "455444300E",
                                    "partner_id": "3453",
                                    "partner_pass": "1234"
                                }
                            }
                          ]
                        }
                    ]
                }
            ],
            "client_details": {
                "name": "John",
                "surname": "Smith"
            },
            "status": "PREORDER"
        }

+ Response 201 (application/json)

        {
            "order_id": "4322",
            "preorder_id": "fksjfkajhkfj4kj53k45j3knrkfndkfn",
            "order_total_price": 25.50,
            "order_items": [
                {
                    "supplier_id": "avet-fcb",
                    "external_order_id": "34C88A4/1112016/145847",
                    "delivery_method": {
                        "type": "PASSBOOK"
                    },
                    "order_items_total_price": 25.50,
                    "events":[
                        {
                          "event_id": "4345",
                          "event_date_id": "2",
                          "remaining_release_seats_time": 125,
                          "event_total_price": 25.50,
                          "tickets":[
                            {
                                "ticket_id": "342",
                                "seat_id": "454",
                                "is_numbered": true,
                                "price_level_id": "4345",
                                "row": 20,
                                "row_name": "20",
                                "seat": 3,
                                "seat_name": "3A",
                                "entrance": "",
                                "gate": "1",
                                "block": "1",
                                "sector": "",
                                "barcode": "",
                                "price": 25.50,
                                "status": "RESERVED",
                                "buyer": {
                                    "personal_id": "455444300E",
                                    "partner_id": "3453",
                                    "partner_pass": "1234"
                                }
                            }
                          ]
                        }
                    ]
                }
            ],
            "client_details": {
                "name": "John",
                "surname": "Smith"
            },
            "status": "PREORDER"
        }

+ Response 400 (application/json)

        {
          "error": "Bad request",
          "error_description": "There was a syntax error, check your params request and try it again."
        }

+ Response 401 (application/json)

        {
          "error": "unauthorized",
          "error_description": "Full authentication is required to access this resource"
        }


### Modify an order [PUT /orders/{id}]

This will update an order resource, the user are entitled to set the number of wished seats by a given price_zone, 
to set detailed allocation if venue configuration allow you, to set the buyer personal details and delivery method. And overall, a client will be able to perform it directly (direct confirm) or in two steps (first lock the seats -default- getting a temporal token, then confirm the seats if already paid receving the final locator). Possible statues available are:

 + `INITIATE` - Null value to set up an empty order
 + `PREORDER` - Lock tickets for a while
 + `PAID` - Mark tickets as paid and confirmed
 

+ Parameters
  
  + id (required, string) ... Update the order identified by this id


+ Request  (application/json)

        {
            "order_id": "4322",
            "preorder_id": "fksjfkajhkfj4kj53k45j3knrkfndkfn",
            "order_total_price": 25.50,
            "order_items": [
                {
                    "supplier_id": "avet-fcb",
                    "external_order_id": "34C88A4/1112016/145847",
                    "delivery_method": {
                        "type": "PASSBOOK"
                    },
                    "order_items_total_price": 25.50,
                    "events":[
                        {
                          "event_id": "4345",
                          "event_date_id": "2",
                          "remaining_release_seats_time": 125,
                          "event_total_price": 25.50,
                          "tickets":[
                            {
                                "ticket_id": "342",
                                "seat_id": "454",
                                "is_numbered": true,
                                "price_level_id": "4345",
                                "row": 20,
                                "row_name": "20",
                                "seat": 3,
                                "seat_name": "3A",
                                "entrance": "",
                                "gate": "1",
                                "block": "1",
                                "sector": "",
                                "barcode": "",
                                "price": 25.50,
                                "status": "RESERVED",
                                "buyer": {
                                    "personal_id": "455444300E",
                                    "partner_id": "3453",
                                    "partner_pass": "1234"
                                }
                            }
                          ]
                        }
                    ]
                }
            ],
            "client_details": {
                "name": "John",
                "surname": "Smith"
            },
            "status": "PREORDER"
        }

+ Response 200 (application/json)

        {
            "order_id": "4322",
            "preorder_id": "fksjfkajhkfj4kj53k45j3knrkfndkfn",
            "order_total_price": 25.50,
            "order_items": [
                {
                    "supplier_id": "avet-fcb",
                    "external_order_id": "34C88A4/1112016/145847",
                    "delivery_method": {
                        "type": "PASSBOOK"
                    },
                    "order_items_total_price": 25.50,
                    "events":[
                        {
                          "event_id": "4345",
                          "event_date_id": "2",
                          "remaining_release_seats_time": 125,
                          "event_total_price": 25.50,
                          "tickets":[
                            {
                                "ticket_id": "342",
                                "seat_id": "454",
                                "is_numbered": true,
                                "price_level_id": "4345",
                                "row": 20,
                                "row_name": "20",
                                "seat": 3,
                                "seat_name": "3A",
                                "entrance": "",
                                "gate": "1",
                                "block": "1",
                                "sector": "",
                                "barcode": "",
                                "price": 25.50,
                                "status": "RESERVED",
                                "buyer": {
                                    "personal_id": "455444300E",
                                    "partner_id": "3453",
                                    "partner_pass": "1234"
                                }
                            }
                          ]
                        }
                    ]
                }
            ],
            "client_details": {
                "name": "John",
                "surname": "Smith"
            },
            "status": "PREORDER"
        }

+ Response 400 (application/json)

        {
          "error": "Bad request",
          "error_description": "There was a syntax error, check your params request and try it again."
        }

+ Response 401 (application/json)

        {
            "error": "unauthorized",
            "error_description": "Full authentication is required to access this resource"
        }

## Tickets seat operations [/orders/{order_id}/tickets]

### Add a new ticket to the order [POST]

This will manage the seating selection for a given already created order.

+ Request  (application/json)

        {
            "order_id": "4322",
            "preorder_id": "fksjfkajhkfj4kj53k45j3knrkfndkfn",
            "order_total_price": 25.50,
            "order_items": [
                {
                    "supplier_id": "avet-fcb",
                    "external_order_id": "34C88A4/1112016/145847",
                    "delivery_method": {
                        "type": "PASSBOOK"
                    },
                    "order_items_total_price": 25.50,
                    "events":[
                        {
                          "event_id": "4345",
                          "event_date_id": "2",
                          "remaining_release_seats_time": 125,
                          "event_total_price": 25.50,
                          "tickets":[
                            {
                                "ticket_id": "342",
                                "seat_id": "454",
                                "is_numbered": true,
                                "price_level_id": "4345",
                                "row": 20,
                                "row_name": "20",
                                "seat": 3,
                                "seat_name": "3A",
                                "entrance": "",
                                "gate": "1",
                                "block": "1",
                                "sector": "",
                                "barcode": "",
                                "price": 25.50,
                                "status": "RESERVED",
                                "buyer": {
                                    "personal_id": "455444300E",
                                    "partner_id": "3453",
                                    "partner_pass": "1234"
                                }
                            }
                          ]
                        }
                    ]
                }
            ],
            "client_details": {
                "name": "John",
                "surname": "Smith"
            },
            "status": "PREORDER"
        }

+ Response 200 (application/json)

        {
            "order_id": "4322",
            "preorder_id": "fksjfkajhkfj4kj53k45j3knrkfndkfn",
            "order_total_price": 25.50,
            "order_items": [
                {
                    "supplier_id": "avet-fcb",
                    "external_order_id": "34C88A4/1112016/145847",
                    "delivery_method": {
                        "type": "PASSBOOK"
                    },
                    "order_items_total_price": 25.50,
                    "events":[
                        {
                          "event_id": "4345",
                          "event_date_id": "2",
                          "remaining_release_seats_time": 125,
                          "event_total_price": 25.50,
                          "tickets":[
                            {
                                "ticket_id": "342",
                                "seat_id": "454",
                                "is_numbered": true,
                                "price_level_id": "4345",
                                "row": 20,
                                "row_name": "20",
                                "seat": 3,
                                "seat_name": "3A",
                                "entrance": "",
                                "gate": "1",
                                "block": "1",
                                "sector": "",
                                "barcode": "",
                                "price": 25.50,
                                "status": "RESERVED",
                                "buyer": {
                                    "personal_id": "455444300E",
                                    "partner_id": "3453",
                                    "partner_pass": "1234"
                                }
                            }
                          ]
                        }
                    ]
                }
            ],
            "client_details": {
                "name": "John",
                "surname": "Smith"
            },
            "status": "PREORDER"
        }

+ Response 400 (application/json)

        {
          "error": "Bad request",
          "error_description": "There was a syntax error, check your params request and try it again."
        }

+ Response 401 (application/json)

        {
          "error": "unauthorized",
          "error_description": "Full authentication is required to access this resource"
        }

### Delete a ticket seat [DELETE /orders/{order_id}/tickets/{ticket_id}{?externalOrderId,eventDateId}]

This will delete the given seat from an already created order.

+ Parameters
  + order_id (required, string) ... Indicate a concrete ticket seat from an order.
  + ticket_id (required, number) ... Indicate a concrete ticket seat from an order.
  + externalOrderId (required, string) ... The external order identifies
  + eventDateId (required, number) ... The event date identifier of the ticket

+ Response 204 (application/json)

+ Response 400 (application/json)

        {
          "error": "Bad request",
          "error_description": "There was a syntax error, check your params request and try it again."
        }

+ Response 401 (application/json)

        {
          "error": "unauthorized",
          "error_description": "Full authentication is required to access this resource"
        }
